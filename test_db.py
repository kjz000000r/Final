# test_db.py
from bot.db_pg import db
from dotenv import load_dotenv

load_dotenv()

print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Neon DB...")

try:
    # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π SELECT
    result = db.execute("SELECT 1 AS test")
    row = result.fetchone()
    print(f"‚úÖ –¢–µ—Å—Ç 1: {row}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
    result = db.execute("""
        SELECT table_name 
        FROM information_schema.tables 
        WHERE table_schema = 'public'
    """)
    tables = result.fetchall()
    print(f"‚úÖ –¢–µ—Å—Ç 2: –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
    for table in tables:
        print(f"   - {table['table_name']}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    result = db.execute("SELECT COUNT(*) as cnt FROM products")
    count = result.fetchone()
    print(f"‚úÖ –¢–µ—Å—Ç 3: –ü—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –±–∞–∑–µ: {count['cnt']}")
    
    print("\nüéâ –í–°–Å –†–ê–ë–û–¢–ê–ï–¢! –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞.")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()